plt.bar(df_percent_grouping['key_percent'].values, df_percent_grouping['count'].values)
    plt.xlabel("Percentage of Proteins of only {} group(%)".format(group_name))
    plt.ylabel("Number of Keys")
    plt.title("Distribution of Unique keys in {} group \nw.r.t its Proteins Percentage".\
              format(group_name, group_name))
    plt.ylim(0,max_count + y_axis_step)
    ymin, ymax = plt.gca().get_ylim()
    xmin, xmax = plt.gca().get_xlim()
    x_start = (xmax - xmin)/2
    plt.text(x_start - x_axis_step,  max_count, "#Total Keys: " + r"$\bf{" + str(t_keys) + "}$"  )
    plt.text(x_start- x_axis_step,  (max_count - y_axis_step/2), "#Unique Keys: " + r"$\bf{" + str(u_keys) + "}$" )
    plt.text(x_start- x_axis_step, (max_count - ((3*y_axis_step)/2)), "Max. Percent containing \nunique common keys: " 
             + r"$\bf{" + str(round(np.max(max_percent), 0)) + "}$" + "%")
             
    plt.text(x_start-x_axis_step, (max_count - ((4*y_axis_step)/2)), "#Keys at Max. Percent: "+ r"$\bf{" + str(no_keys) + "}$" )
    for x,y in zip(df_percent_grouping['key_percent'].values, df_percent_grouping['count'].values):
        label = "{}".format(y.round())
        plt.annotate(label, # this is the text
                     (x,y), # this is the point to label
                     textcoords="offset points", # how to position the text
                     xytext=(1,3), # distance from text to points (x,y)
                     ha='center') # horizontal alignment can be left, right or center
    plt.savefig(os.path.join(args.path, args.sample_name, args.bin_folder, 'group_analysis', 
    	"plot_unique_keys_{}.png".format(group_in_test)), bbox_inches='tight')